<template>
  <view class="borrow-subscribe">
    <view class="weui-cells weui-cells_after-title borrow-address">
      <view class="weui-cell block">
        <view class="weui-media-box__title h4 color-666">绑定手机号</view>
      </view>

      <block>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label reset-label-left">+86</view>
          </view>
          <view class="weui-cell__bd h4">
            <input bindinput="typing" class="weui-input" value="{{phone}}" placeholder="请填写手机号码" data-wpytyping-a="phone"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input reset-input">
          <view class="weui-cell__bd h4">
            <input bindinput="typing" class="weui-input" value="{{code}}" placeholder="请输入验证码" data-wpytyping-a="code"/>
          </view>

          <view class="weui-cell__ft">
            <view class="weui-label reset-label-right">
              <button bindtap="verify" class="weui-btn mini-btn" type="default" size="mini">{{btnText}}</button>
            </view>
          </view>
        </view>
      </block>
    </view>

    <view class="weui-cells__tips">
      <view class="color-666">说明</view>
      <view class="color-999">需登录后实名认证才能发布需求！</view>
    </view>

    <button bindtap="mylogin" class="weui-btn btn-primary" type="primary">登录</button>
    <button bindtap="regisiter" class="weui-btn btn-primary" type="primary">没有账户？去注册！</button>

  </view>
</template>

<script>
import wepy from 'wepy'
// import { service } from '../config.js'
import http from '../../mixins/http'
import base from '../../mixins/base'
import user from '../../mixins/user'

export default class pageUser extends wepy.page {
  mixins = [base, http, user];
  config = {
    navigationBarTitleText: '登录',
    enablePullDownRefresh: false
  }
  data = {
    userInfo: {
      nickName: '加载中...',
      // 头像占位图
      avatarUrl: '../images/icon/icon-avatar@2x.png',

      packages: {
        times: 0,
        status: '借阅状态'
      },
      identity: {
        type: '订阅状态',
        collection: 0
      }
    }
  }

  computed = {
    packages() {
      return this.getObject(this.getObject(this.userInfo).packages)
    },
    identity() {
      return this.getObject(this.getObject(this.userInfo).identity)
    },
    nickName() {
      const info = this.getObject(this.userInfo)
      // 名称或头像不为空的，才认为是授权用户
      return info.nickName || info.avatarUrl ? info.nickName : '未授权用户'
    }
  }

  onShow() {
    // 初始化页面数据
    this.$getUserInfo(info => {
      const uinfo = this.getObject(info)
      const userInfo = this.getObject(this.userInfo)
      this.userInfo = Object.assign({}, userInfo, uinfo)
      this.initPageData()
    })
  }

  onPullDownRefresh() {
    this.initPageData()
  }

  // 初始化页面数据
  initPageData() {
    // 根据业务接口处理:获取最新个人信息并更新
    // this.$get({url: service.user}, {
    //   success: ({code, data}) => {},
    //   fail: ({code, data}) => {}
    // })
  }

  methods = {}

  components = {}
}
</script>

<style lang="less">
@import "../../styles/custom/fn.less";

.page-user {
  @userinfoHeight: 100rpx;
  @userinfoSpace: 8rpx;

  .userinfo {
    padding: 20rpx 0;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    margin-bottom: 24rpx;
    width: @userinfoHeight;
    height: @userinfoHeight;
    border-radius: 50%;
  }

  // space + space
  .userinfo-info {
    line-height: 1;
    padding: @userinfoSpace 0;
    margin-left: 3 * @userinfoSpace;
  }

  // text + space + text
  .userinfo-nickname {
    color: @uiColorGreen;
    font-size: (@userinfoHeight - 4 * @userinfoSpace) * (16 / 30);
    margin-bottom: 2 * @userinfoSpace;
  }
  .userinfo-status {
    color: #999;
    font-size: (@userinfoHeight - 4 * @userinfoSpace) * (14 / 30);
  }
}
</style>
