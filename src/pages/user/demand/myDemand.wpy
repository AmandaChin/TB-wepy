<template>
 <view>
   <view class="navbar page">
      <booklist :list.sync="list"  title="历史需求"
                :loading.sync="loading" :noMore.sync="noMoreList" :isCollectList.sync="isCollectList" :page.sync="pagetype"></booklist>
    </view>
    
 </view>
</template>


<script>
import booklist from '../../../components/bookList'
import wepy from 'wepy'
import { service } from '../../../config.js'
import { funImages } from '../../../mixins/demo'
import base from '../../../mixins/base'
import http from '../../../mixins/http'
import user from '../../../mixins/user'
import publicProcess from '../../../mixins/publicProcess'
const sliderWidth = 96; // 需要设置slider的宽度，用于计算中间位置
export default class myDemand extends wepy.page {
   mixins = [base, user, http ,publicProcess]
  config = {
    navigationBarTitleText: '我的需求',
    enablePullDownRefresh: false
  }
  data = {
    list: [],
    noMoreList: false,
    loading: false,
    isCollectList: true,
    pagetype: 'historyDemand'
  }

  methods = {
   
  }

  async onLoad () {
    this.initPageData()
  }

  onReachBottom() {
    setTimeout(() => {
      this.updateDemandList()
      this.$apply()
    }, 200)
  }

  // 初始化页面数据
  initPageData() {
    // 初始化参数
    this.page = 0
    // 请求列表
    this.updateDemandList()
  }

  async updateDemandList() {
    //if (this.loading || this.noMoreList) return
    let res = await wepy.request({
         url: service.host + '/getDemandByUserID',
         data:{
           //'UserID': 2
           'UserID': parseInt(this.$parent.globalData.id)
         },
         method: 'POST'
    })
    console.log('update')
    console.log(res)
    const list = res.data.list
    // 请求到空列表后就认为没有更多了
    if (this.isArray(list) && list.length === 0) {
      this.noMoreList = true
      return
       }
    this.list = this.getItems(list)
    this.$apply()

  }

  // 处理列表
  getItems(data) {
    //const len = this.list.length
    return this.getArray(data).map((item, index) => {
      // 拼接示例数据
      return {
        id: item.ServiceID,
        title: item.Content,
        name: item.Name,
        date: item.DemandStartTime.substring(0,10),
        time: item.DemandStartTime.substring(11,19),
        content: this.convertHtmlToText(item.Remark),
        status: item.Status,
        duration: item.Duration,
        phone:item.Phone,
        mutualtype:item.mutualtype
      }
    })
    this.$apply()
  }
  
  components = {
    booklist
  }
 
}
</script>

<style lang="less">
@import "../../../styles/weui/widget/weui-tab/weui-navbar.wxss";
.navbar {
    .page,
    .page__bd{
        height: 100%;
    }
    .page__bd{
        padding-bottom: 0;
    }
    .weui-tab__content{
        padding-top: 60px;
        text-align: center;
    }
}
</style>
