<template>
  <view class="page-index">
    <SearchBar :placeholder="searchText"></SearchBar>
    <Swiper :list.sync="swipers" height="280"></Swiper>
    <Category :list.sync="categorys" col="4"></Category>
    <BookList :list.sync="list" title="义工市场"
     :loading.sync="loading" :noMore.sync="noMoreList"></BookList>
  </view>
</template>

<script>
import wepy from 'wepy'
import { service } from '../config.js'
import base from '../mixins/base'
import http from '../mixins/http'
import { funImages } from '../mixins/demo'
import Swiper from '../components/swiper'
import SearchBar from '../components/searchbar'
import Category from '../components/category'
import BookList from '../components/bookList'

export default class pageIndex extends wepy.page {
  mixins = [base, http]
  config = {
    navigationBarTitleText: '首页',
    navigationBarTextStyle: 'white',
    navigationBarBackgroundColor: '#049BFF'
  }
  data = {
    searchText: '搜索感兴趣的义工需求',
    swipers: [
      // 占位图，防止请求错误无图显示
      { image: '/images/timg.gif', url: '/pages/index' },
      { image: '/images/yigong.jpg', url: '/pages/index' }
    ],
    categorys: [
      { title: '陪护', image: funImages[0] },
      { title: '打扫', image: funImages[1] },
      { title: '剪发', image: funImages[2] },
      { title: '做饭', image: funImages[3] }
    ],

    noMoreList: false,
    loading: false,
    list: [],
    page: 0,
    size: 5
  }

  onReady() {
    this.initPageData()
  }

  onPullDownRefresh() {
    this.initPageData()
  }

  onReachBottom() {
    setTimeout(() => {
      this.updateBookList(this.page)
      this.$apply()
    }, 200)
  }

  // 初始化页面数据
  initPageData() {
    // 初始化参数
    this.page = 0

    // 请求列表
    this.updateBookList(this.page)

    // 处理轮播图this.swipers.push({ image: "/images/swiper.png" })
    // 处理菜单栏
    this.categorys.map((cate, index) => {
      const xnum = Math.min(Math.max(index, 1), 3)
      cate.url = `/pages/main/list?params=${this.$json({
        value: [xnum, 4 - xnum].map(item => this.getString(item)),
        index: index + 1,
        title: cate.title
      })}`
    })
  }

  // 更新图书列表
  updateBookList(page) {
    if (this.loading || this.noMoreList) return
    this.loading = true
    // 请求列表
    this.$post(
      {
        url: service.list,
        data: {
          // 默认从0开始为第一页
          page: page,
          size: this.size
        }
      },
      {
        success: ({ code, data }) => {
          // 示例规则：最多20本
          if (this.list.length >= 20) {
            this.noMoreList = true
            return
          }

          // 请求到空列表后就认为没有更多了
          if (this.isArray(data) && data.length === 0) {
            this.noMoreList = true
            return
          }
          if (!this.page || +this.page === 0) {
            this.list = this.getBooks(data)
          } else {
            // 添加到列表中
            this.list = [...this.list, ...this.getBooks(data)]
          }
          // 成功了就增加一页
          this.page += 1
        },
        fail: ({ code, data }) => {
          // 失败了什么也不做
        },
        complete: () => {
          this.loading = false
        }
      }
    )
  }

  // 处理图书列表
  getBooks(data) {
    const len = this.list.length
    return this.getArray(data).map((book, index) => {
      const xlen = len + index
      // 拼接示例数据
      return {
        id: xlen,
        title: book.title,
        content: `简介: ${book.title}；${book.title}。`,
        image: funImages[(xlen + 4) % 8],
        tags: ['tag1', 'tag2'],
        status: xlen % 2
      }
    })
  }

  methods = {}

  components = {
    SearchBar,
    Category,
    BookList,
    Swiper
  }
}
</script>

<style lang="less">
.page-index {
  // some style
}
</style>
