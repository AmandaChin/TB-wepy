<template>
  <view class="main-list">
    <view class="main-list-title clearfix" wx:if="{{keywords && keywords.length}}">
      <view class="pull-left width-8p">
        <block wx:for="{{keywords}}" wx:key="index">
          <text wx:if="{{index > 0}}">，</text>
          <text>{{item}}</text>
        </block>
      </view>
      <text @tap="clearSearch" class="link link-blue pull-right">清空筛选</text>
    </view>
    <BookList :list.sync="list" :loading.sync="loading" :noMore.sync="noMoreList"></BookList>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { service } from '../../config.js'
  import base from '../../mixins/base'
  import http from '../../mixins/http'
  import { funImages } from '../../mixins/demo'
  import BookList from '../../components/bookList'

  export default class mainList extends wepy.page {
    mixins = [base, http]
    config = {
      navigationBarTitleText: '查找'
    }
    data = {
      params: {},

      noMoreList: false,
      loading: false,
      list: [],
      page: 0,
      size: 5
    }

    onLoad(query) {
      let params = query && query.params
      try {
        params = JSON.parse(params)
      } catch (e) {
        params = {}
      }
      this.params = params
    }

    onReady() {
      this.initPageData(this.page)
    }

    onPullDownRefresh() {
      this.initPageData()
    }

    onReachBottom() {
      setTimeout(() => {
        this.updateBookList(this.page)
        this.$apply()
      }, 200)
    }

    methods = {
      clearSearch() {
        // 清空参数
        this.params = {}
        // 初始化页面
        this.initPageData()
      }
    }

    computed = {
      keywords() {
        const title = this.params && this.params.title
        const words = this.params && this.params.key_word
        const keywords = this.getString(words || title).split(/\s+/g)
        return keywords.filter((item) => item) || []
      }
    }

    // 初始化页面数据
    initPageData() {
      // 初始化参数
      this.page = 0
      this.loading = false
      this.noMoreList = false

      // 请求推荐列表
      this.updateBookList(this.page)
    }

    // 更新图书列表
  updateBookList(page) {
    if (this.loading || this.noMoreList) return
    this.loading = true
    // 请求列表
    this.$get(
      {
        url:'https://www.nkugame.com/api/getAllDemand',
        //url: service.list,
      },
      {
        success: ({list}) => {
          const data = list.rows
          console.log(data.length)
          // 示例规则：最多20本
          if (this.list.length >= data.length) {
            this.noMoreList = true
            return
          }

          // 请求到空列表后就认为没有更多了
          if (this.isArray(data) && data.length === 0) {
            this.noMoreList = true
            return
          }
          this.list = this.getItems(data)
          
        },
        fail: ({list}) => {
          // 失败了什么也不做
        },
        complete: () => {
          this.loading = false
        }
      }
    )
  }

  // 处理图书列表
  getItems(data) {
    const len = this.list.length
    return this.getArray(data).map((item, index) => {
      const xlen = len + index
      // 拼接示例数据
      return {
        id: xlen,
        title: item.Content,
        content: `简介: 需求人${item.Name}，在${item.DemandStartTime}发布${item.Content}的需求 。`,
        image: funImages[(xlen + 4) % 8],
        tags: ['', ''],
        status: xlen % 2
      }
    })
  }


    components = {
      BookList
    }
  }
</script>

<style lang="less">
@import "../../styles/weui/base/fn.wxss";

.main-list{
  .width-8p{
    width: 80% !important;
  }

  .main-list-title {
    padding: 1em @weuiCellGapH;
    color: @weuiTextColorGray;
    font-size: @weuiCellTipsFontSize;
  }
}
</style>
